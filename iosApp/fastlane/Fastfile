lane :test do
  run_tests
end

lane :build do
  setup_ci if ENV['CI']
  app_store_connect_api_key(
    key_id: ENV['APPLE_API_KEY_ID'],
    issuer_id: ENV['APPLE_API_ISSUER_ID'],
    key_content: ENV['APPLE_API_KEY_CONTENT'],
    is_key_content_base64: true
  )
  import_certificate(
    certificate_path: "cert.p12",
    certificate_password: ENV['APPLE_CERT_PASSWORD'],
    keychain_name: "fastlane_tmp_keychain"
  )
  get_provisioning_profile(
    provisioning_name: "Compose Wallet Distribution"
  )
  update_project_provisioning(
    build_configuration: "Release"
  )
  build_app(
    xcargs: "-allowProvisioningUpdates",
    configuration: "Release"
  )
end


lane :deploy do
  setup_ci if ENV['CI']
  app_store_connect_api_key(
    key_id: ENV['APPLE_API_KEY_ID'],
    issuer_id: ENV['APPLE_API_ISSUER_ID'],
    key_content: ENV['APPLE_API_KEY_CONTENT'],
    is_key_content_base64: true
  )
  import_certificate(
    certificate_path: "cert.p12",
    certificate_password: ENV['APPLE_CERT_PASSWORD'],
    keychain_name: "fastlane_tmp_keychain"
  )
  get_provisioning_profile(
    provisioning_name: "Compose Wallet Distribution"
  )
  increment_build_number(
    build_number: latest_testflight_build_number + 1
  )
  update_project_provisioning(
    build_configuration: "Release"
  )
  build_app(
    xcargs: "-allowProvisioningUpdates",
    configuration: "Release",
    export_method: "app-store"
  )
  upload_to_testflight(
    skip_waiting_for_build_processing: true
  )
end

